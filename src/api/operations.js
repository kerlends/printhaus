// @flow

export const GetCheckoutQuery =
  'fragment VariantFragment on ProductVariant  { id,title,price,weight,available,sku,compareAtPrice,image { id,src,altText },selectedOptions { name,value } },fragment VariantWithProductFragment on ProductVariant  { ...VariantFragment,product { id } },fragment MailingAddressFragment on MailingAddress  { id,address1,address2,city,company,country,firstName,formatted,lastName,latitude,longitude,phone,province,zip,name,countryCode,provinceCode },fragment CheckoutFragment on Checkout  { id,ready,requiresShipping,note,paymentDue,webUrl,orderStatusUrl,taxExempt,taxesIncluded,currencyCode,totalTax,subtotalPrice,totalPrice,completedAt,createdAt,updatedAt,shippingAddress { ...MailingAddressFragment },shippingLine { handle,price,title },customAttributes { key,value },order { id,processedAt,orderNumber,subtotalPrice,totalShippingPrice,totalTax,totalPrice,currencyCode,totalRefunded,customerUrl,shippingAddress { ...MailingAddressFragment },lineItems (first: 250) { pageInfo { hasNextPage,hasPreviousPage },edges { cursor,node { title,variant { ...VariantWithProductFragment },quantity,customAttributes { key,value } } } } },lineItems (first: 250) { pageInfo { hasNextPage,hasPreviousPage },edges { cursor,node { id,title,variant { ...VariantWithProductFragment },quantity,customAttributes { key,value } } } } },query ($id:ID!)  { node (id: $id) { __typename,...CheckoutFragment } }';

export const CreateCheckoutMutation =
  'fragment VariantFragment on ProductVariant  { id,title,price,weight,available,sku,compareAtPrice,image { id,src,altText },selectedOptions { name,value } },fragment VariantWithProductFragment on ProductVariant  { ...VariantFragment,product { id } },fragment UserErrorFragment on UserError  { field,message },fragment MailingAddressFragment on MailingAddress  { id,address1,address2,city,company,country,firstName,formatted,lastName,latitude,longitude,phone,province,zip,name,countryCode,provinceCode },fragment CheckoutFragment on Checkout  { id,ready,requiresShipping,note,paymentDue,webUrl,orderStatusUrl,taxExempt,taxesIncluded,currencyCode,totalTax,subtotalPrice,totalPrice,completedAt,createdAt,updatedAt,shippingAddress { ...MailingAddressFragment },shippingLine { handle,price,title },customAttributes { key,value },order { id,processedAt,orderNumber,subtotalPrice,totalShippingPrice,totalTax,totalPrice,currencyCode,totalRefunded,customerUrl,shippingAddress { ...MailingAddressFragment },lineItems (first: 250) { pageInfo { hasNextPage,hasPreviousPage },edges { cursor,node { title,variant { ...VariantWithProductFragment },quantity,customAttributes { key,value } } } } },lineItems (first: 250) { pageInfo { hasNextPage,hasPreviousPage },edges { cursor,node { id,title,variant { ...VariantWithProductFragment },quantity,customAttributes { key,value } } } } },mutation ($input:CheckoutCreateInput!)  { checkoutCreate (input: $input) { userErrors { ...UserErrorFragment },checkout { ...CheckoutFragment } } }';

export const AddLineItemMutation =
  'fragment VariantFragment on ProductVariant  { id,title,price,weight,available,sku,compareAtPrice,image { id,src,altText },selectedOptions { name,value } },fragment VariantWithProductFragment on ProductVariant  { ...VariantFragment,product { id } },fragment UserErrorFragment on UserError  { field,message },fragment MailingAddressFragment on MailingAddress  { id,address1,address2,city,company,country,firstName,formatted,lastName,latitude,longitude,phone,province,zip,name,countryCode,provinceCode },fragment CheckoutFragment on Checkout  { id,ready,requiresShipping,note,paymentDue,webUrl,orderStatusUrl,taxExempt,taxesIncluded,currencyCode,totalTax,subtotalPrice,totalPrice,completedAt,createdAt,updatedAt,shippingAddress { ...MailingAddressFragment },shippingLine { handle,price,title },customAttributes { key,value },order { id,processedAt,orderNumber,subtotalPrice,totalShippingPrice,totalTax,totalPrice,currencyCode,totalRefunded,customerUrl,shippingAddress { ...MailingAddressFragment },lineItems (first: 250) { pageInfo { hasNextPage,hasPreviousPage },edges { cursor,node { title,variant { ...VariantWithProductFragment },quantity,customAttributes { key,value } } } } },lineItems (first: 250) { pageInfo { hasNextPage,hasPreviousPage },edges { cursor,node { id,title,variant { ...VariantWithProductFragment },quantity,customAttributes { key,value } } } } },mutation ($checkoutId:ID!,$lineItems:[CheckoutLineItemInput!]!)  { checkoutLineItemsAdd (checkoutId: $checkoutId lineItems: $lineItems) { userErrors { ...UserErrorFragment },checkout { ...CheckoutFragment } } }';

export const RemoveLineItemMutation =
  'fragment VariantFragment on ProductVariant  { id,title,price,weight,available,sku,compareAtPrice,image { id,src,altText },selectedOptions { name,value } },fragment VariantWithProductFragment on ProductVariant  { ...VariantFragment,product { id } },fragment UserErrorFragment on UserError  { field,message },fragment MailingAddressFragment on MailingAddress  { id,address1,address2,city,company,country,firstName,formatted,lastName,latitude,longitude,phone,province,zip,name,countryCode,provinceCode },fragment CheckoutFragment on Checkout  { id,ready,requiresShipping,note,paymentDue,webUrl,orderStatusUrl,taxExempt,taxesIncluded,currencyCode,totalTax,subtotalPrice,totalPrice,completedAt,createdAt,updatedAt,shippingAddress { ...MailingAddressFragment },shippingLine { handle,price,title },customAttributes { key,value },order { id,processedAt,orderNumber,subtotalPrice,totalShippingPrice,totalTax,totalPrice,currencyCode,totalRefunded,customerUrl,shippingAddress { ...MailingAddressFragment },lineItems (first: 250) { pageInfo { hasNextPage,hasPreviousPage },edges { cursor,node { title,variant { ...VariantWithProductFragment },quantity,customAttributes { key,value } } } } },lineItems (first: 250) { pageInfo { hasNextPage,hasPreviousPage },edges { cursor,node { id,title,variant { ...VariantWithProductFragment },quantity,customAttributes { key,value } } } } },mutation ($checkoutId:ID!,$lineItemIds:[ID!]!)  { checkoutLineItemsRemove (checkoutId: $checkoutId lineItemIds: $lineItemIds) { userErrors { ...UserErrorFragment },checkout { ...CheckoutFragment } } }';

export const UpdateLineItemMutation =
  'fragment VariantFragment on ProductVariant  { id,title,price,weight,available,sku,compareAtPrice,image { id,src,altText },selectedOptions { name,value } },fragment VariantWithProductFragment on ProductVariant  { ...VariantFragment,product { id } },fragment UserErrorFragment on UserError  { field,message },fragment MailingAddressFragment on MailingAddress  { id,address1,address2,city,company,country,firstName,formatted,lastName,latitude,longitude,phone,province,zip,name,countryCode,provinceCode },fragment CheckoutFragment on Checkout  { id,ready,requiresShipping,note,paymentDue,webUrl,orderStatusUrl,taxExempt,taxesIncluded,currencyCode,totalTax,subtotalPrice,totalPrice,completedAt,createdAt,updatedAt,shippingAddress { ...MailingAddressFragment },shippingLine { handle,price,title },customAttributes { key,value },order { id,processedAt,orderNumber,subtotalPrice,totalShippingPrice,totalTax,totalPrice,currencyCode,totalRefunded,customerUrl,shippingAddress { ...MailingAddressFragment },lineItems (first: 250) { pageInfo { hasNextPage,hasPreviousPage },edges { cursor,node { title,variant { ...VariantWithProductFragment },quantity,customAttributes { key,value } } } } },lineItems (first: 250) { pageInfo { hasNextPage,hasPreviousPage },edges { cursor,node { id,title,variant { ...VariantWithProductFragment },quantity,customAttributes { key,value } } } } },mutation ($checkoutId:ID!,$lineItems:[CheckoutLineItemUpdateInput!]!)  { checkoutLineItemsUpdate (checkoutId: $checkoutId lineItems: $lineItems) { userErrors { ...UserErrorFragment },checkout { ...CheckoutFragment } } }';
